"""initial_migration

Revision ID: d3af2530152e
Revises:
Create Date: 2025-07-01 16:31:48.556085

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd3af2530152e'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('date_of_birth', sa.DateTime(), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('kyc_status', sa.String(length=50), nullable=True),
    sa.Column('is_staff', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'ACTIVE', 'SUSPENDED', 'CLOSED', name='userstatus'), nullable=False),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('accounts',
    sa.Column('account_number', sa.String(length=20), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('account_type', sa.Enum('SAVINGS', 'CHECKING', 'CREDIT', 'LOAN', name='accounttype'), nullable=False),
    sa.Column('balance', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'ACTIVE', 'DORMANT', 'SUSPENDED', 'CLOSED', name='accountstatus'), nullable=False),
    sa.Column('opened_date', sa.DateTime(), nullable=True),
    sa.Column('closed_date', sa.DateTime(), nullable=True),
    sa.Column('interest_rate', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('overdraft_limit', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_accounts_account_number'), 'accounts', ['account_number'], unique=True)
    op.create_index(op.f('ix_accounts_id'), 'accounts', ['id'], unique=False)
    op.create_table('loans',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('loan_type', sa.Enum('PERSONAL', 'MORTGAGE', 'AUTO', 'STUDENT', 'BUSINESS', 'PAYDAY', name='loantype'), nullable=False),
    sa.Column('principal_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('current_balance', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('interest_rate', sa.Numeric(precision=5, scale=4), nullable=False),
    sa.Column('term_months', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('REQUESTED', 'PENDING_APPROVAL', 'APPROVED', 'REJECTED', 'ACTIVE', 'PAID_OFF', 'DEFAULTED', 'CANCELLED', name='loanstatus'), nullable=False),
    sa.Column('application_date', sa.DateTime(), nullable=True),
    sa.Column('approval_date', sa.DateTime(), nullable=True),
    sa.Column('disbursement_date', sa.DateTime(), nullable=True),
    sa.Column('next_payment_date', sa.DateTime(), nullable=True),
    sa.Column('final_payment_date', sa.DateTime(), nullable=True),
    sa.Column('collateral_description', sa.Text(), nullable=True),
    sa.Column('purpose', sa.Text(), nullable=True),
    sa.Column('credit_score_at_application', sa.Integer(), nullable=True),
    sa.Column('automated_approval_status', sa.String(length=50), nullable=True),
    sa.Column('risk_rating', sa.String(length=50), nullable=True),
    sa.Column('repayment_frequency', sa.Enum('WEEKLY', 'BI_WEEKLY', 'MONTHLY', 'QUARTERLY', 'ANNUALLY', name='repaymentfrequency'), nullable=True),
    sa.Column('installment_amount', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_loans_id'), 'loans', ['id'], unique=False)
    op.create_table('cards',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('card_number_hashed', sa.String(length=255), nullable=False),
    sa.Column('card_type', sa.Enum('DEBIT', 'CREDIT', 'PREPAID', 'VIRTUAL', name='cardtype'), nullable=False),
    sa.Column('card_network', sa.Enum('VISA', 'MASTERCARD', 'AMEX', 'DISCOVER', 'OTHER', name='cardnetwork'), nullable=True),
    sa.Column('expiry_date', sa.String(length=7), nullable=False),
    sa.Column('cvv_hashed', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('REQUESTED', 'ACTIVE', 'INACTIVE', 'SUSPENDED', 'EXPIRED', 'LOST_STOLEN', 'CLOSED', name='cardstatus'), nullable=False),
    sa.Column('issue_date', sa.DateTime(), nullable=True),
    sa.Column('activation_date', sa.DateTime(), nullable=True),
    sa.Column('credit_limit', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('available_credit', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('billing_address', sa.String(length=255), nullable=True),
    sa.Column('is_physical', sa.Boolean(), nullable=True),
    sa.Column('contactless_enabled', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cards_card_number_hashed'), 'cards', ['card_number_hashed'], unique=True)
    op.create_index(op.f('ix_cards_id'), 'cards', ['id'], unique=False)
    op.create_table('transactions',
    sa.Column('from_account_id', sa.Integer(), nullable=True),
    sa.Column('to_account_id', sa.Integer(), nullable=True),
    sa.Column('transaction_type', sa.Enum('DEPOSIT', 'WITHDRAWAL', 'TRANSFER', 'PAYMENT', 'FEE', 'INTEREST', 'LOAN_DISBURSEMENT', 'LOAN_REPAYMENT', 'REFUND', 'AI_ADJUSTMENT', name='transactiontype'), nullable=False),
    sa.Column('amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED', 'REVERSED', name='transactionstatus'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('reference_id', sa.String(length=100), nullable=True),
    sa.Column('transaction_date', sa.DateTime(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('fraud_score', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('is_flagged_for_review', sa.Boolean(), nullable=True),
    sa.Column('automated_by', sa.String(length=50), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['from_account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['to_account_id'], ['accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transactions_from_account_id'), 'transactions', ['from_account_id'], unique=False)
    op.create_index(op.f('ix_transactions_id'), 'transactions', ['id'], unique=False)
    op.create_index(op.f('ix_transactions_reference_id'), 'transactions', ['reference_id'], unique=True)
    op.create_index(op.f('ix_transactions_status'), 'transactions', ['status'], unique=False)
    op.create_index(op.f('ix_transactions_to_account_id'), 'transactions', ['to_account_id'], unique=False)
    op.create_index(op.f('ix_transactions_transaction_date'), 'transactions', ['transaction_date'], unique=False)
    op.create_index(op.f('ix_transactions_transaction_type'), 'transactions', ['transaction_type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_transactions_transaction_type'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_transaction_date'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_to_account_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_status'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_reference_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_from_account_id'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_cards_id'), table_name='cards')
    op.drop_index(op.f('ix_cards_card_number_hashed'), table_name='cards')
    op.drop_table('cards')
    op.drop_index(op.f('ix_loans_id'), table_name='loans')
    op.drop_table('loans')
    op.drop_index(op.f('ix_accounts_id'), table_name='accounts')
    op.drop_index(op.f('ix_accounts_account_number'), table_name='accounts')
    op.drop_table('accounts')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
